<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>json on Hiep&#39;s Blog</title>
    <link>https://duongphuhiep.github.io/tags/json/</link>
    <description>Recent content in json on Hiep&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 18 Jun 2020 21:27:09 +0200</lastBuildDate>
    
	<atom:link href="https://duongphuhiep.github.io/tags/json/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C# System.Text.Json</title>
      <link>https://duongphuhiep.github.io/posts/csharp-system-text-json/</link>
      <pubDate>Thu, 18 Jun 2020 21:27:09 +0200</pubDate>
      
      <guid>https://duongphuhiep.github.io/posts/csharp-system-text-json/</guid>
      <description>There is many Json Serializer for .NET out there.
Microsoft used to depend on the Newtonsoft.Json (aka. Json.NET) library. However, since the .NET Core 3, Microsoft introduced their own json serializer in the System.Text.Json package.
The Michael Blog&amp;rsquo;s post published some benchmark on differences .NET Json Serializers. His benchmark show that the new System.Text.Json of Microsoft is not the fastest one, but the speed favor appears to go to the jil serializer.</description>
    </item>
    
  </channel>
</rss>